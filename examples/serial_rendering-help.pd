#N canvas 319 53 1193 848 12;
#X declare -lib Gem;
#X obj 460 10 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X floatatom 736 454 5 0 0 0 - - - 0;
#X obj 594 470 square 4;
#X obj 20 23 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000
#000000 0 1;
#X msg 20 47 \; pd dsp \$1;
#X obj 44 23 declare -lib Gem;
#X msg 14 119 color 1 0 0;
#N canvas 87 154 247 179 Gem.init 0;
#X obj 118 46 loadbang;
#X msg 118 81 reset;
#X obj 118 113 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 19 140 pd Gem.init;
#N canvas 690 294 682 322 gemwin 0;
#X obj 102 122 tgl 15 0 \$0-gemstart \$0-gemstart empty 17 7 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 102 161 r \$0-gemstart;
#X obj 102 182 select 1 0;
#X msg 102 214 create \, 1;
#X msg 177 215 destroy;
#X obj 102 239 t a;
#X obj 318 54 inlet;
#X obj 318 255 gemwin;
#X obj 318 100 t a a;
#X obj 318 287 outlet;
#X obj 350 128 route create destroy;
#X obj 350 150 t b;
#X msg 350 172 1;
#X obj 390 150 t b;
#X msg 390 172 0;
#X obj 350 195 t f;
#X msg 350 219 set \$1;
#X text 118 122 rendering;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 10 0;
#X connect 10 0 11 0;
#X connect 10 1 13 0;
#X connect 11 0 12 0;
#X connect 12 0 15 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X coords 0 -1 1 1 85 40 1 100 100;
#X restore 15 162 pd gemwin;
#X obj 434 339 t a a;
#X obj 435 317 alpha;
#X obj 456 253 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000
#000000 0 1;
#X floatatom 549 32 5 0 0 0 - - - 0;
#X obj 481 112 metro 10;
#X obj 435 295 gemhead 50;
#X floatatom 904 37 5 0 0 0 - - - 0;
#X obj 520 209 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X text 517 179 click to change pix_object;
#X msg 594 232 dimen 1000 1000;
#X msg 260 678 shadernumber uniformname uniformvalue;
#X text 465 568 Outlets: Outlet 1: Dataoutput (type gem_state) Outlet
2: ID of last buffer to map onto texture outside the abstraction;
#X text 13 214 Description: This serial abstraction loads glsl fragment
shaders in a chain (including the necessary glsl program \, gemframebuffers
and textures). The purpose is to use it as chain of shader effects
and order them in any way you want. Arguments: 1 Number of shaders
(buffers \, textures etc...) 2 Dimension of the buffer \, etc. in x-direction*
3 Dimension of the buffer \, etc. in y-direction* 4 Define own shader-names
1/0 (default 0). Shaders can be loaded automatically \; if set to 0
\, the names of the shaders must follow a naming convention in this
case: first loaded shader must be named "shader-0".frag \, second "shader-1"
and so on. If set to 1 \, shader names for each position in the chain
can be defined manually. In general \, a fragment and vertex shader
program with the same name (e.g. name.frag \, name.vert) have to exist
in the same directory as the abstraction. For more information about
the use of framebuffers and shaders have a look at the glsl examples
in the Gem examples directory. Inlets: Inlet 1: Force the rendering
via [bang( \, send 1 to open the input data subpatch Inlet 2: Change
the dimension Inlet Inlet 3: Send uniform variables to the shader \,
specified by the first argument in the message Inlet 4: Destination
for fragment shader in rendering chain \, if argument 4 is set to 1
, f 59;
#X obj 459 28 t f f f b;
#X obj 467 60 s on;
#X floatatom 980 223 5 0 0 0 - - - 0;
#X text 107 179 1 Turn On here;
#X text 780 297 klick here to load shader by name in first position
in rendering chain;
#X text 306 12 start rendering here;
#X msg 980 247 0 X \$1;
#X floatatom 978 182 5 0 0 0 - - - 0;
#X floatatom 980 40 5 0 0 0 - - - 0;
#X msg 980 62 0 wet \$1;
#X obj 594 444 rotateXYZ 0 180 180;
#X msg 904 62 0 num \$1;
#X msg 979 202 0 Y \$1;
#X msg 978 109 0 x_off \$1;
#X msg 978 154 0 y_off \$1;
#X floatatom 979 88 5 0 0 0 - - - 0;
#X floatatom 978 132 5 0 0 0 - - - 0;
#X text 780 14 uniform variable parameters for mirror.frag shader;
#X obj 596 376 pix_texture \; quality 1 \; repeat 1 \; rectangle 0
;
#X floatatom 915 321 5 0 0 0 - - - 0;
#X floatatom 930 432 5 0 0 0 - - - 0;
#X msg 822 360 0 x 1 \, 0 size 5 \, 0 sigma \$1 \, 0 direc 1;
#X msg 880 405 1 x 1 \, 1 size 5 \, 1 sigma \$1 \, 1 direc 0;
#X obj 516 296 serial_rendering 2 512 512 1;
#X msg 744 297 0;
#X connect 0 0 22 0;
#X connect 3 0 4 0;
#X connect 6 0 8 0;
#X connect 7 0 8 0;
#X connect 9 1 40 0;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 13 1;
#X connect 13 0 45 0;
#X connect 14 0 10 0;
#X connect 15 0 33 0;
#X connect 16 0 45 0;
#X connect 18 0 45 1;
#X connect 22 0 14 0;
#X connect 22 1 23 0;
#X connect 22 2 13 0;
#X connect 22 3 18 0;
#X connect 24 0 28 0;
#X connect 28 0 45 2;
#X connect 29 0 34 0;
#X connect 30 0 31 0;
#X connect 31 0 45 2;
#X connect 32 0 2 0;
#X connect 33 0 45 2;
#X connect 34 0 45 2;
#X connect 35 0 45 2;
#X connect 36 0 45 2;
#X connect 37 0 35 0;
#X connect 38 0 36 0;
#X connect 40 0 32 0;
#X connect 40 1 1 0;
#X connect 41 0 43 0;
#X connect 42 0 44 0;
#X connect 43 0 45 2;
#X connect 44 0 45 2;
#X connect 45 1 40 1;
#X connect 46 0 45 3;
